<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="85473" started-at="2018-01-07T18:56:58Z" finished-at="2018-01-07T18:58:23Z">
    <groups>
    </groups>
    <test name="Test Chrome" duration-ms="85473" started-at="2018-01-07T18:56:58Z" finished-at="2018-01-07T18:58:23Z">
      <class name="tests.Login">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Login@17e2f02]" name="beforeMethod" is-config="true" duration-ms="419" started-at="2018-01-08T00:26:58Z" finished-at="2018-01-08T00:26:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Login.login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="login()[pri:0, instance:tests.Login@17e2f02]" name="login" duration-ms="71258" started-at="2018-01-08T00:26:58Z" finished-at="2018-01-08T00:28:10Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: failed to change window state to normal, current state is maximized
  (Session info: chrome=63.0.3239.132)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.2.9200 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HP', ip: '192.168.99.1', os.name: 'Windows 8', os.arch: 'x86', os.version: '6.2', java.version: '1.8.0_60'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=XP, acceptSslCerts=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=XP, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\pc\AppData\Local\Temp\scoped_dir2728_12492}, takesHeapSnapshot=true, pageLoadStrategy=normal, unhandledPromptBehavior=, databaseEnabled=false, handlesAlerts=true, version=63.0.3239.132, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: fa664ec7004a5cf402d700ad88938fb6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: failed to change window state to normal, current state is maximized
  (Session info: chrome=63.0.3239.132)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.2.9200 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HP', ip: '192.168.99.1', os.name: 'Windows 8', os.arch: 'x86', os.version: '6.2', java.version: '1.8.0_60'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=XP, acceptSslCerts=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=XP, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\pc\AppData\Local\Temp\scoped_dir2728_12492}, takesHeapSnapshot=true, pageLoadStrategy=normal, unhandledPromptBehavior=, databaseEnabled=false, handlesAlerts=true, version=63.0.3239.132, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: fa664ec7004a5cf402d700ad88938fb6
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:643)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:877)
	at tests.Login.login(Login.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="AfterMehod(org.testng.ITestResult)[pri:0, instance:tests.Login@17e2f02]" name="AfterMehod" is-config="true" duration-ms="920" started-at="2018-01-08T00:28:11Z" finished-at="2018-01-08T00:28:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=Login.login()[pri:0, instance:tests.Login@17e2f02] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMehod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.Login@17e2f02]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-01-08T00:28:12Z" finished-at="2018-01-08T00:28:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.Login.loginWithIncorrectPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="loginWithIncorrectPassword()[pri:0, instance:tests.Login@17e2f02]" name="loginWithIncorrectPassword" duration-ms="10045" started-at="2018-01-08T00:28:12Z" finished-at="2018-01-08T00:28:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithIncorrectPassword -->
        <test-method status="PASS" signature="AfterMehod(org.testng.ITestResult)[pri:0, instance:tests.Login@17e2f02]" name="AfterMehod" is-config="true" duration-ms="169" started-at="2018-01-08T00:28:23Z" finished-at="2018-01-08T00:28:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithIncorrectPassword status=SUCCESS method=Login.loginWithIncorrectPassword()[pri:0, instance:tests.Login@17e2f02] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMehod -->
      </class> <!-- tests.Login -->
    </test> <!-- Test Chrome -->
  </suite> <!-- Suite -->
</testng-results>
